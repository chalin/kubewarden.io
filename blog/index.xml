<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on Kubewarden</title><link>/blog/</link><description>Recent content in Blog on Kubewarden</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 16 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>WebAssembly is coming to Cloud Native</title><link>/blog/2021/07/webassembly-is-coming-to-cloud-native/</link><pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate><guid>/blog/2021/07/webassembly-is-coming-to-cloud-native/</guid><description>Is the title of this post a pun inspired by Christmas or by the Games of Thrones? I can&amp;rsquo;t decide&amp;hellip;
Are my dad jokes as bad as my daughters claim? Probably&amp;hellip;
Is WebAssembly spreading inside of the Cloud Native ecosystem? ðŸ’¯ I have no doubts about that!
First of all, why am I so excited about seeing WebAssembly flourish inside of the Cloud Native ecosystem? Well, it&amp;rsquo;s no secret that I&amp;rsquo;m a huge fan of it.</description></item><item><title>Let's learn Kubewarden - Streaming Event</title><link>/blog/2021/07/learn-kubewarden-streaming-event/</link><pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate><guid>/blog/2021/07/learn-kubewarden-streaming-event/</guid><description>In case you missed, CNCF Ambassador Saiyam Pathak recently hosted a live streaming event on his YouTube channel about Kubewarden. Flavio had the pleasure to join Saiyam and give an overview of the project.
We spoke about Kubernetes Admission Controllers, why we started the Kubewarden project and how it differentiates from other existing open source projects such as Open Policy Agent and Kyverno.
The talk features also a brief overview of WebAssembly, what it is and what are the benefits it provides to Kubewarden.</description></item><item><title>Introducing the PSP host namespaces policy</title><link>/blog/2021/06/introducing-the-psp-host-namespaces-policy/</link><pubDate>Fri, 11 Jun 2021 00:00:00 +0000</pubDate><guid>/blog/2021/06/introducing-the-psp-host-namespaces-policy/</guid><description>As you probably know, Kubernetes Pod Security Policies (PSPs) are being deprecated in Kubernetes 1.21 &amp;ndash; although these APIs will be served until Kubernetes 1.25 it&amp;rsquo;s a good time to start thinking about what you will use to replace them.
At Kubewarden we have an ongoing effort to replace the Pod Security Policies with small, targeted Kubewarden policies.
Up until now, we have implemented some policies that replace some Pod Security Policies:</description></item><item><title>Introducing kwctl to Kubernetes Administrators</title><link>/blog/2021/06/kwctl-intro-for-kubernetes-administrators/</link><pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate><guid>/blog/2021/06/kwctl-intro-for-kubernetes-administrators/</guid><description>We are pleased to announce the availability of a new tool within the Kubewarden project: kwctl.
kwctl is a command line utility designed to help both policy authors and Kubernetes administrators.
This blog post focuses on the user experience of Kubernetes administrators. Future ones will cover the policy developer side of the story.
A Real-World Example: Controlling Container Capabilities The main character of today&amp;rsquo;s story is Alice. Alice is a Kubernetes administrator who wants to keep her Kubernetes cluster secure.</description></item><item><title>Writing your first policy with Kubewarden</title><link>/blog/2021/06/writing-your-first-policy-with-kubewarden/</link><pubDate>Wed, 02 Jun 2021 00:00:00 +0000</pubDate><guid>/blog/2021/06/writing-your-first-policy-with-kubewarden/</guid><description>Kubewarden is a project focused on security and compliance. Its main goal is to allow you to write, test, distribute and run policies using the tooling that you already know and master, with a focus on controlling Kubernetes inner behaviors.
Policies are written in one of the supported languages, and the target object is a WebAssembly binary artifact. This is how Kubewarden can ensure that no matter where you built the policy, it can run on all platforms without any kind of adaptation.</description></item></channel></rss>